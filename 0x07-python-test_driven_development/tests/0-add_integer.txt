# Run test with: python3 -m doctest -v ./tests/0-add_integer.txt

Import the module to test:
    from 0-add_integer import add_integer
    >>> add_integer = __import__('0-add_integer').add_integer

Test for signed and unsigned ints and floats:
    >>> add_integer(1, 3)
    4
    >>> add_integer(-2, 8)
    6
    >>> add_integer(2)
    100
    >>> add_integer(2.5)
    100
    >>> add_integer(3, -5.5)
    -2

Test for other data types:
    >>> add_integer(4, "School")
    Traceback (most recent call last):
     ...
    TypeError: b must be an integer
    >>> add_integer("some")
    Traceback (most recent call last):
     ...
    TypeError: a must be an integer
    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> print(add_integer(0, [1, 2, 3]))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test extra args:
     >>> print(add_integer(1, 2, 3))
     Traceback (most recent call last):
     ...
     TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Test max/min numbers Python can handle ("inf" is infinity):
     >>> print(add_integer(float("inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer
     >>> print(add_integer(float("-inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer

Test special float NaN in Python (not a number):
     >>> print(add_integer(float("NaN")))
     Traceback (most recent call last):
     ...
     ValueError: cannot convert float NaN to integer